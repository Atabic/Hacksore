name: Deploy Firebase
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build Web"]
    types:
      - completed
env:
  NODE_VERSION: "16"
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  deploy:
    name: Firebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-          
      - name: Create google service account file and env var
        run: |
          # decode the token into json and write to file, using base64 to not have to mess with the json format
          echo "Creating file in $HOME/firebase.json"
          echo "${{ secrets.FIREBASE_SA_BASE64 }}" | base64 --decode > "$HOME/firebase.json"
          
          # source the env with the path to the file
          echo "Sourcing env GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase.json" >> $GITHUB_ENV
      - name: Install firebase-tools
        run: yarn global add firebase-tools
      - name: Deploy rules
        run: firebase deploy --only database --non-interactive